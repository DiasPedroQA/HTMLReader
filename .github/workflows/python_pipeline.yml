name: TDD CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    - cron: '40 17 * * 3'  # Executa toda quarta-feira √†s 17:40 UTC

env:
  PYTHON_VERSION: '3.12'

jobs:
  quality:
    name: üîç Quality & Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do c√≥digo
        uses: actions/checkout@v4

      - name: Configurar Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Instalar depend√™ncias de valida√ß√£o
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-dev.txt
          pip install ruff mypy isort pylint

      - name: Verificar Lint (Ruff)
        run: ruff check .

      - name: Verificar Tipagem (Mypy)
        run: mypy app/
        continue-on-error: true

      - name: Verificar Imports (Isort)
        run: isort . --check-only --profile black

      - name: Verificar Qualidade (Pylint)
        run: pylint app/ tests/ || true

  test-linux:
    name: üêß Testes no Linux + Coverage
    runs-on: ubuntu-latest
    needs: quality

    steps:
      - uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Instalar depend√™ncias
        run: |
          pip install -r requirements.txt -r requirements-dev.txt

      - name: Rodar testes com coverage
        run: |
          coverage run -m pytest -v --maxfail=1 --disable-warnings
          coverage report -m
          coverage xml
          coverage html

      - name: Enviar cobertura ao Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          fail_ci_if_error: true

  test-windows:
    name: ü™ü Testes no Windows
    runs-on: windows-latest
    needs: quality

    steps:
      - uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Instalar depend√™ncias
        run: |
          pip install -r requirements.txt -r requirements-dev.txt
          pytest

  test-macos:
    name: üçé Testes no macOS
    runs-on: macos-latest
    needs: quality

    steps:
      - uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Instalar depend√™ncias
        run: |
          pip install -r requirements.txt -r requirements-dev.txt
          pytest

  security:
    name: üîê An√°lise de Seguran√ßa (Bandit)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Rodar Bandit
        run: |
          pip install bandit
          bandit -r app/ -ll -ii
